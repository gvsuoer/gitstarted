<?xml version='1.0' encoding='utf-8'?>

<section xml:id="S_gitcollabfinalize">
  <title>Revisiting the Three Step Process</title>
  <idx><h>three step process</h></idx>
  <idx><h>git</h><h>three step process</h></idx>
  <introduction>
    <p>
      Just as in <xref ref="S_gitfinalize"/>, this is a very important section. Take care to do everything in the correct order and with the correct keywords.
    </p>
    <p>
      Recall that the three step process for sending changes back to GitHub consists of
      <ol>
        <li>
          <p>
            Staging your files for sending
          </p>
        </li>
        <li>
          <p>
            Commiting your changes
          </p>
        </li>
        <li>
          <p>
            Pushing your changes to GitHub
          </p>
        </li>
      </ol>
    </p>
    <p>
      Since we've already covered much of this material, I won't go into as much detail. I will, however, point out any significant differences. As you move forward, don't forget about the handy <c>git status</c> command to remind you what files have been edited, staged, or committed.
    </p>
  </introduction>

  <subsection xml:id="SS_gitcollabadd">
    <title>Staging Files</title>
    <idx><h>staging</h></idx>
    <idx><h>git</h><h>stage</h></idx>
    <p>
      This step will not be any different from before. Use <xref ref="try-git-add"/> to stage your edited <c>secret.txt</c> file.
    </p>
    <p>
      Remember that <c>git add</c> is pretty flexible. If you've edited more than one file, you can choose which files to add. Maybe you want to make two commits. In that case, stage some files and commit them, then stage the other files and commit them.
    </p>
  </subsection>

  <subsection xml:id="SS_gitcollabcommit">
    <title>Committing Files</title>
    <idx><h>commit files</h></idx>
    <idx><h>git</h><h>commit</h></idx>
    <p>
      This step will also not be any different from before. Just remember that you should try to design your commit messages to be short and descriptive. If the repo you are contributing to has a preference for how commit messages are written, you should try to follow that as best you can. Otherwise, don't be offended when your commit message is changed.
    </p>
    <p>
      <xref ref="try-git-commit"/> will probably be helpful as will the reminders at the end of <xref ref="SS_git-commit"/>. Commit your <c>secret.txt</c> file and provide an apt commit message (especially one that shows you were reading this book).
    </p>
  </subsection>

  <subsection xml:id="SS_gitcollabpush">
    <title>Pushing Files</title>
    <idx><h>push files</h></idx>
    <idx><h>git</h><h>push</h></idx>
    
    <p>
      Alright, here is where some small changes come up. In <xref ref="S_gitfinalize"/>, we pushed to the origin repository. But from <xref ref="S_hubcollabsetup"/> and <xref ref="S_hubcollabfetch"/>, when you fork, you introduce another remote: upstream. And now that we have a clone, we also have a local repo.
    </p>
    <p>
      Alright, so what about right now? You have your changes staged and committed, but to where do you push? Local? That won't work since you already have the changes locally. Upstream? It might make sense to push directly to the authoritative repo, but since you don't have write access, this will likely not work. The right thing to do here is push to origin. Remember, <q>origin</q> in this case, refers to your fork.
    </p>
    <p>
      From <xref ref="SS_git-push"/> (and <xref ref="try-git-push"/>) can you figure out what to type into the terminal to push to origin?
    </p>
    <p>
      Remember you need to specify the remote and the branch you are pushing to so <c>git push origin &lt;branch-name></c> will do nicely.
    </p>

  </subsection>

  <conclusion>
    <p>
      Believe it or not, <xref ref="three-step-summ"/> was written in generic terms, so it applies here as well! Keep it handy, or perhaps keep <xref ref="S_gitsumm"/> and <xref ref="S_gitcollabsumm"/> in mind as you proceed in your Git career. Now let's go create a pull request from that push we just made.
    </p>
  </conclusion>
  
</section>