<?xml version='1.0' encoding='utf-8'?>

<section xml:id="S_gitcollabsumm">
  <title>Summary</title>
  <idx><h>summary</h><h>git collaborate</h></idx>
  
    <p>
      This section is a complete summary of the Git/GitHub process. In some cases, there is more than one way to do a step. I try to provide all methods, but truthfully, I don't use certain methods. I've found a workflow that works for me and I've done it so much that the commands are second nature now. You might think about saving this section for future reference.
    </p>
    <p>
      Some of these pieces are very similar to the summary in <xref ref="S_gitsumm"/>, but is designed for collaborative work (where you are editing someone else's repository). You are welcome to follow the instructions in <xref ref="S_gitsumm"/> and have others edit your files, too.

      <ol>
        <li>
          <p>
            Navigate to a repository you would like to edit and fork that repository. See <xref ref="act-hub-fork"/> in <xref ref="SS_forking"/>.
          </p>
        </li>
        <li>
          <p>
            Use <c>git clone</c> to clone your fork (not the repo you forked from) on your personal computer. See <xref ref="try-git-clone"/>.
          </p>
        </li>
        <li>
          <p>
            Create a good branch name (make sure you switch to that branch after you make it). See <xref ref="SS_gitbranches"/> and <xref ref="SS_gitcollabbranch"/>.
          </p>
        </li>
        <li>
          <p>
            Edit those files! (<xref ref="S_gitcollabedit"/>)
          </p>
        </li>
        <li>
          <p>
            Follow the three step process as described in <xref ref="S_gitcollabfinalize"/>. Don't forget about the usefulness of <c>git status</c> throughout (<xref ref="SS_git-status"/>)!
            <ol>
              <li>
                <p>
                  Stage your files with <c>git add</c>. See <xref ref="SS_git-add"/> and <xref ref="try-git-add"/>.
                </p>
              </li>
              <li>
                <p>
                  Commit your files with <c>git commit -m</c>. See <xref ref="SS_git-commit"/> and <xref ref="try-git-commit"/>.
                </p>
              </li>
              <li>
                <p>
                  Push your files back to your fork on GitHub (on your current branch) with <c>git push origin</c>. See <xref ref="SS_git-push"/>, <xref ref="SS_gitcollabpush"/> and <xref ref="try-git-push"/>.
                </p>
              </li>
            </ol>
          </p>
        </li>
        <li>
          <p>
            Create a pull request to merge your changes into your fork's main branch.
          </p>
          <p>
            Or create a pull request to merge your changes from your fork's branch directly to the authoritative repo's main branch. See <xref ref="SS_gitcollabpr"/>
          </p>
        </li>
        <li>
          <p>
            Wait for your changes to be merged into the main branch.
          </p>
        </li>
        <li>
          <p>
            After your changes have been merged, pull the changes into your local clone and your fork with <c>git pull upstream main</c> and then <c>git push origin main</c>. Remember to do this often even if you don't have any pending changes to be merged. See <xref ref="SS_gitcollabpull"/>.
          </p>
          <p>
            You may need to set an upstream with <c>git remote add upstream &lt;link></c> (<xref ref="try-git-pull-upstream"/>)
          </p>
        </li>
      </ol>
    </p>
  


  
</section>