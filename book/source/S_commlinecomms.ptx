<?xml version='1.0' encoding='utf-8'?>

<section xml:id="commlinecomms">
  <title>Useful Command Line Commands</title>
  <introduction>
    <p>
      Now that we have understand what a terminal does and how to find it, let's learn some commands. 
      We'll start with the basics.
    </p>
  </introduction>

  <subsection xml:id="navigatecommline">
    <title>Navigating Your Computer With the Command Line</title>
    
    <p>
      When your first open your terminal, you aren't given very much information. On Mac and Windows, 
      you get your username and maybe your computer name/id but not much else. This isn't very helpful.
      How can we do anything with our computer when we don't even know where we are on the computer?
    </p>
    
    <paragraphs xml:id="pwd">
      <title>Using <c>pwd</c></title>
    <p>
    <idx><h>pwd</h></idx>
    <idx><h>present working directory</h></idx>
      Our first command will show us where we are: <c>pwd</c>, which stands for 
      <term>present working directory</term>. 
      <warning xml:id="foldernotdirect">
        <title>Folders Are Not Directories</title>
        <p>
          From <url href="https://en.wikipedia.org/wiki/Directory_%28computing%29#Folder_metaphor">Wikipedia</url> 
          we can read that 
          <blockquote>
            If one is referring to a container of documents, the term folder is more appropriate.
            The term directory refers to the way a structured list of document files and folders are 
            stored on the computer.
          </blockquote>
          That's a little confusing! The difference here is mostly technical. Essentially, a 
          <term>directory</term> is a 
          <q>file system object</q> whereas a <term>folder</term> is just a user-friendly way to 
          represent directories. For our purposes (and for most purposes), the two terms can be used 
          interchangeably. I use <q>directory</q> when speaking about functions on the command line and 
          <q>folder</q> when speaking in informal settings. If you are interested, you can read more about 
          the history of the terms 
          <url href="https://www.quora.com/What-is-the-difference-between-a-folder-and-a-directory">at 
          this Quora question</url>.
        </p>
      </warning>
    </p>

    <exercise xml:id="try-pwd">
      <title>Trying <c>pwd</c></title>
      <p>
        Enter <c>pwd</c> at your terminal. What does it tell you?
      </p>
      <p>
        Note: anytime you wish to <q>enter something at your terminal</q>, type in the desired command 
        and press <kbd>Enter</kbd>.
      </p>
    </exercise>

    <p>
      <c>pwd</c> prints one thing: the file path to the folder that is <q>active</q> at your terminal. 
      When you first open your terminal, Mac users might see something like <c>/Users/&lt;your-username></c> 
      and Windows (Git Bash) users <c>/c/Users/&lt;your-username></c>. If you ever get lost in your terminal, 
      type in <c>pwd</c> for some reassurance. 
    </p>
    </paragraphs>

    <paragraphs xml:id="cd">
      <title>Using <c>cd</c></title>
    <p>
      <idx><h>cd</h></idx>
      <idx><h>change directory</h></idx>
      Knowing where you are is great, but as of right now, we are stuck in one place. What use is 
      <c>pwd</c> if we can't move anywhere? By default, your terminal places you in the <q>highest</q> 
      level possible; from there we can only move <q>in</q>. Essentially, you are moving from one 
      directory <em>into</em> another. The <c>cd</c>, or <term>change directory</term> command can do 
      this for us. <c>cd</c> requires another piece of information: the directory you wish to navigate to, 
      which must be typed using file-path syntax. 
    </p>
    
    <exercise xml:id="try-cd">
      <title>Trying <c>cd</c></title>
      <statement>
        <p>
          Enter <c>cd Desktop/</c> into your terminal. Did anything change?
        </p>
      </statement>
      <hint>
        <p>
          Try running <c>pwd</c> after <c>cd</c>. Do you notice anything different here?
        </p>
      </hint>
    </exercise>

    <p>
      If everything went correctly, you should now be <q>in</q> your Desktop directory (folder, if you 
      insist). You may have even noticed that your terminal changed. On any operating system, you should 
      see that the word <q>Desktop</q> appeared before your cursor. This is a nice check to make sure that 
      <c>cd</c> worked and that you are where you want to be. 
    </p>
    </paragraphs>

    <paragraphs xml:id="ls">
      <title>Using <c>ls</c></title>
      
      <p>
        Ok, we're making progress! Now that we are in the Desktop, what can we do? Let's use another 
        terminal command to see what files and directories are currently on your Desktop. <c>ls</c>, or 
        <term>list contents</term> will do the trick. Note that the output will differ for each user as 
        we all have different files in different places.
      </p>

      <exercise xml:id="try-ls">
        <title>Trying <c>ls</c></title>
        
        <p>
          Enter <c>ls</c> into your terminal. What is the output? Is it what you expected?
        </p>
      </exercise>

      <p>
        Perhaps unsurprisingly, your terminal should have just listed every single element on your 
        Desktop. If you every forget what files are in your <q>active</q> directory (and you don't want to 
        open your file browswer and navigate to the folder), use <c>ls</c> as 
        a refresher.
      </p>

      <p>
        You may have noticed that some files/directories show up in your terminal that are not visible 
        on your Desktop. This is because most operating systems by default hide certain files that should 
        not be deleted. They still exist, they are just invisible to prevent accidental deletion. 
        For more information on hidden files, see <xref provisional="hidden-files"/>.
      </p>

    </paragraphs>
<!-- tk add warning about not skipping directories with cd -->
  </subsection>

  <subsection xml:id="newfilescline">
    <title>Modifying Files and Directories</title>
    <introduction>
      <p>
        Now that we are familiar with navigating our computer with the command line, let's learn a little 
        more. Suppose you are in your Desktop (which we are) and you want to add a text file. Since you 
        are already in the terminal and don't want to open a text editor, create a new file, and save it 
        to your desktop. Or, suppose you have a file on the Desktop that you no longer need and you don't 
        to open you file browser, navigate to the Desktop, and delete the file. These examples may seem 
        silly, but now suppose you are six folders deep. It would take much more time to navigate to those 
        folders in a file browser than it would in the terminal.
      </p>
    </introduction>
  </subsection>
</section>